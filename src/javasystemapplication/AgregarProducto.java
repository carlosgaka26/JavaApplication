/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package javasystemapplication;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;


/**
 *
 * @author CarlosGalvan
 */
public class AgregarProducto extends javax.swing.JFrame {

    private JTextField txtNombreProducto;
    private JButton btnGuardar, btnRegresar;
    private ProductoDAO productoDAO = new ProductoDAO();

    /**
     * Creates new form AgregarProducto
     */
    public AgregarProducto() {
        setTitle("Agregar Producto");
        setSize(450, 250);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setLayout(new BorderLayout());

        // 🔹 Panel principal para el formulario (GridBagLayout para mejor distribución)
        JPanel panelFormulario = new JPanel(new GridBagLayout());
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.insets = new Insets(10, 10, 10, 10);

        JLabel lblNombreProducto = new JLabel("Nombre del Producto:");
        txtNombreProducto = new JTextField(20);

        // Configuración de la posición del label
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.EAST;
        panelFormulario.add(lblNombreProducto, gbc);

        // Configuración de la posición del campo de texto
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        panelFormulario.add(txtNombreProducto, gbc);

        // 🔹 Panel de botones (FlowLayout para centrarlos)
        JPanel panelBotones = new JPanel(new FlowLayout(FlowLayout.CENTER, 20, 10));
        btnGuardar = new JButton("Guardar");
        btnRegresar = new JButton("Regresar");

        // Agregar botones al panel
        panelBotones.add(btnGuardar);
        panelBotones.add(btnRegresar);

        // 🔹 Agregar paneles a la ventana
        add(panelFormulario, BorderLayout.CENTER);
        add(panelBotones, BorderLayout.SOUTH);

        // 🔹 Eventos de botones
        btnGuardar.addActionListener((ActionEvent e) -> {
            confirmarGuardarProducto();
        });

        btnRegresar.addActionListener((ActionEvent e) -> {
            dispose(); // Cerrar la ventana actual
            new PantallaProductos().setVisible(true); // Volver a la pantalla de productos
        });

        aplicarEstilos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AgregarProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AgregarProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AgregarProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AgregarProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new AgregarProducto().setVisible(true);
        });
    }

    private void confirmarGuardarProducto() {
        String nombreProducto = txtNombreProducto.getText().trim();

        if (nombreProducto.isEmpty()) {
            JOptionPane.showMessageDialog(this, "El nombre del producto no puede estar vacío.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Mostrar nombre del producto en el cuadro de confirmación
        int confirmacion = JOptionPane.showConfirmDialog(this,
                "¿Estás seguro de que deseas guardar el producto: \n" + nombreProducto + "?",
                "Confirmar", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

        if (confirmacion == JOptionPane.YES_OPTION) {
            boolean exito = productoDAO.agregarProducto(nombreProducto);
            if (exito) {
                JOptionPane.showMessageDialog(this, "Producto agregado correctamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                dispose();
                new PantallaProductos().setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "Error al guardar el producto.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private void aplicarEstilos() {
        // Colores más modernos y suaves
        Color azul = new Color(0, 102, 204);
        Color gris = new Color(169, 169, 169); // Gris suave
        Color blanco = Color.WHITE;

        // Estilo de los botones
        btnGuardar.setBackground(azul);
        btnGuardar.setForeground(blanco);
        btnGuardar.setFont(new Font("Arial", Font.BOLD, 14));
        btnGuardar.setPreferredSize(new Dimension(120, 40));
        btnGuardar.setFocusPainted(false);
        btnGuardar.setBorder(BorderFactory.createLineBorder(azul, 2));

        btnRegresar.setBackground(gris);
        btnRegresar.setForeground(blanco);
        btnRegresar.setFont(new Font("Arial", Font.BOLD, 14));
        btnRegresar.setPreferredSize(new Dimension(120, 40));
        btnRegresar.setFocusPainted(false);
        btnRegresar.setBorder(BorderFactory.createLineBorder(gris, 2));

        // Fondo
        getContentPane().setBackground(new Color(240, 240, 240));

        // Campo de texto
        txtNombreProducto.setFont(new Font("Arial", Font.PLAIN, 14));
        txtNombreProducto.setPreferredSize(new Dimension(200, 30));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
