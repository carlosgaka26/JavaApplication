/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package javasystemapplication;

import javax.swing.*;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.util.List;
/**
 *
 * @author CarlosGalvan
 */
public class BuscarProducto extends javax.swing.JFrame {

    private JTextField txtBusqueda;
    private JButton btnRegresar;
    private JTable tablaResultados;
    private DefaultTableModel modeloTabla;
    private ProductoDAO productoDAO = new ProductoDAO();

    /**
     * Creates new form BuscarProducto
     */
    public BuscarProducto() {
        setTitle("Buscar Producto");
        setSize(600, 400);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setLayout(new BorderLayout());

        // ðŸ”¹ Panel superior para la bÃºsqueda
        JPanel panelBusqueda = new JPanel(new FlowLayout());
        txtBusqueda = new JTextField(20);
        btnRegresar = new JButton("Regresar");

        panelBusqueda.add(new JLabel("Buscar Producto:"));
        panelBusqueda.add(txtBusqueda);
        panelBusqueda.add(btnRegresar);

        add(panelBusqueda, BorderLayout.NORTH);

        // ðŸ”¹ Modelo para la tabla
        modeloTabla = new DefaultTableModel();
        modeloTabla.addColumn("Nombre Producto");
        modeloTabla.addColumn("Clase");
        modeloTabla.addColumn("Unidad Medida");
        modeloTabla.addColumn("ConversiÃ³n");

        // ðŸ”¹ Tabla con resultados de bÃºsqueda
        tablaResultados = new JTable(modeloTabla);
        JScrollPane scrollPane = new JScrollPane(tablaResultados);
        add(scrollPane, BorderLayout.CENTER);

        // ðŸ”¹ Aplicar estilos
        aplicarEstilos();

        // ðŸŽ¯ Actualizar tabla en tiempo real al escribir
        txtBusqueda.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                buscarProductoEnTiempoReal();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                buscarProductoEnTiempoReal();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                buscarProductoEnTiempoReal();
            }
        });

        // ðŸŽ¯ Evento para regresar a la pantalla anterior
        btnRegresar.addActionListener(e -> {
            dispose();
            new PantallaProductos().setVisible(true);
        });

        // ðŸš€ Cargar todos los productos al iniciar la pantalla
        buscarProductoEnTiempoReal();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BuscarProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BuscarProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BuscarProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BuscarProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BuscarProducto().setVisible(true);
            }
        });
    }

    // MÃ©todo para cargar productos desde la base de datos
    private void cargarProductos() {

        List<String[]> productos = productoDAO.obtenerProductos();

        // Limpiar la tabla antes de cargar nuevos productos
        modeloTabla.setRowCount(0);

        // Llenar la tabla con los productos obtenidos
        for (String[] producto : productos) {
            modeloTabla.addRow(new Object[]{producto});
        }
    }

    // ðŸ”¹ MÃ©todo para buscar productos y actualizar tabla en tiempo real
    private void buscarProductoEnTiempoReal() {
        String criterio = txtBusqueda.getText().trim();

        // Obtener lista de productos desde el DAO
        List<String[]> resultados;
        if (criterio.isEmpty()) {
            // Si el campo estÃ¡ vacÃ­o, mostrar todos los productos
            resultados = productoDAO.obtenerTodosLosProductos();
        } else {
            // Si hay texto, buscar productos que coincidan
            resultados = productoDAO.buscarProducto(criterio);
        }

        // Limpiar tabla antes de mostrar resultados
        modeloTabla.setRowCount(0);

        // ðŸ”¥ Agregar resultados a la tabla
        for (String[] fila : resultados) {
            modeloTabla.addRow(fila);
        }
    }

    // ðŸ”¹ MÃ©todo para aplicar estilos
    private void aplicarEstilos() {
        Color azul = new Color(0, 102, 204);
        Color gris = Color.GRAY;
        Color blanco = Color.WHITE;

        btnRegresar.setBackground(gris);
        btnRegresar.setForeground(blanco);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
